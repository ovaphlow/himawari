# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import current_user_pb2 as current__user__pb2


class CurrentUserServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignUp = channel.unary_unary(
                '/current_user.CurrentUserService/SignUp',
                request_serializer=current__user__pb2.SignUpRequest.SerializeToString,
                response_deserializer=current__user__pb2.Reply.FromString,
                )
        self.SignIn = channel.unary_unary(
                '/current_user.CurrentUserService/SignIn',
                request_serializer=current__user__pb2.SignInRequest.SerializeToString,
                response_deserializer=current__user__pb2.Reply.FromString,
                )
        self.GetSalt = channel.unary_unary(
                '/current_user.CurrentUserService/GetSalt',
                request_serializer=current__user__pb2.GetSaltRequest.SerializeToString,
                response_deserializer=current__user__pb2.Reply.FromString,
                )
        self.UpdatePassword = channel.unary_unary(
                '/current_user.CurrentUserService/UpdatePassword',
                request_serializer=current__user__pb2.UpdatePasswordRequest.SerializeToString,
                response_deserializer=current__user__pb2.Reply.FromString,
                )


class CurrentUserServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignIn(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSalt(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePassword(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CurrentUserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=current__user__pb2.SignUpRequest.FromString,
                    response_serializer=current__user__pb2.Reply.SerializeToString,
            ),
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=current__user__pb2.SignInRequest.FromString,
                    response_serializer=current__user__pb2.Reply.SerializeToString,
            ),
            'GetSalt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSalt,
                    request_deserializer=current__user__pb2.GetSaltRequest.FromString,
                    response_serializer=current__user__pb2.Reply.SerializeToString,
            ),
            'UpdatePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePassword,
                    request_deserializer=current__user__pb2.UpdatePasswordRequest.FromString,
                    response_serializer=current__user__pb2.Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'current_user.CurrentUserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CurrentUserService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/current_user.CurrentUserService/SignUp',
            current__user__pb2.SignUpRequest.SerializeToString,
            current__user__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/current_user.CurrentUserService/SignIn',
            current__user__pb2.SignInRequest.SerializeToString,
            current__user__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSalt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/current_user.CurrentUserService/GetSalt',
            current__user__pb2.GetSaltRequest.SerializeToString,
            current__user__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/current_user.CurrentUserService/UpdatePassword',
            current__user__pb2.UpdatePasswordRequest.SerializeToString,
            current__user__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
