# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import message_pb2 as message__pb2


class MessageStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Save = channel.unary_unary(
                '/miscdata.Message/Save',
                request_serializer=message__pb2.SaveRequest.SerializeToString,
                response_deserializer=message__pb2.Reply.FromString,
                )
        self.UnreadMessage = channel.unary_unary(
                '/miscdata.Message/UnreadMessage',
                request_serializer=message__pb2.UnreadMessageRequest.SerializeToString,
                response_deserializer=message__pb2.Reply.FromString,
                )


class MessageServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Save(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnreadMessage(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Save': grpc.unary_unary_rpc_method_handler(
                    servicer.Save,
                    request_deserializer=message__pb2.SaveRequest.FromString,
                    response_serializer=message__pb2.Reply.SerializeToString,
            ),
            'UnreadMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.UnreadMessage,
                    request_deserializer=message__pb2.UnreadMessageRequest.FromString,
                    response_serializer=message__pb2.Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'miscdata.Message', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Message(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Save(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/miscdata.Message/Save',
            message__pb2.SaveRequest.SerializeToString,
            message__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnreadMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/miscdata.Message/UnreadMessage',
            message__pb2.UnreadMessageRequest.SerializeToString,
            message__pb2.Reply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
